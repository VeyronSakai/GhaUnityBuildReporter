name: Test
on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  paths-filter:
    name: Paths Filter
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    outputs:
      should-test: ${{ steps.filter.outputs.should-test }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            should-test:
              - Editor/**/*
              - Runtime/**/*
              - Samples~/**/*
              - Tests/**/*
              - .github/workflows/test.yml

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: paths-filter
    if: ${{ (github.event_name == 'pull_request' && needs.paths-filter.outputs.should-test == 'true') || github.event_name == 'push'}}
    permissions:
      contents: read
      actions: read
      checks: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: Samples~/Library
          key: ${{ runner.os }}-Library
      - name: Run EditMode and PlayMode Test
        id: test
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: Samples~
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: "Unity Test Results"
          testMode: "EditMode"
