name: Test
on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  paths-filter:
    name: Paths Filter
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ github.event_name == 'pull_request' }}
    outputs:
      should-test: ${{ steps.filter.outputs.should-test }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            should-test:
              - Editor/**/*
              - Runtime/**/*
              - Samples~/**/*
              - Tests/**/*
              - .github/workflows/test.yml

  get-unity-version:
    name: Get Unity Version
    needs: paths-filter
    if: ${{ (github.event_name == 'pull_request' && needs.paths-filter.outputs.should-test == 'true') || github.event_name == 'push'}}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      PROJECT_VERSION_PATH: Samples~/ProjectSettings/ProjectVersion.txt
    outputs:
      unity-version: ${{ steps.get-unity-version.outputs.unity-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: ${{ env.PROJECT_VERSION_PATH }}
      - name: Get Unity version
        id: get-unity-version
        run: |
          echo "unity-version=$(grep "m_EditorVersion:" < "${PROJECT_VERSION_PATH}" | cut -d" " -f2)" >> "${GITHUB_OUTPUT}"

  test:
    name: Test
    runs-on: self-hosted
    needs: [get-unity-version, paths-filter]
    timeout-minutes: 30
    if: ${{ (github.event_name == 'pull_request' && needs.paths-filter.outputs.should-test == 'true') || github.event_name == 'push'}}
    permissions:
      contents: read
      actions: read
      checks: write
      pull-requests: write
    env:
      UNITY_VERSION: ${{ needs.get-unity-version.outputs.unity-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          clean: false
      - name: Get Unity Path
        id: get-unity-path
        run: |
          if [[ "${RUNNER_OS}" == "macOS" ]]; then
            echo "unity-path=/Applications/Unity/Hub/Editor/${UNITY_VERSION}/Unity.app/Contents/MacOS/Unity" >> "${GITHUB_OUTPUT}"
          elif [[ "${RUNNER_OS}" == "Windows" ]]; then
            printf "unity-path=C:\\\\Program Files\\\\Unity\\\\Hub\\\\Editor\\\\%s\\\\Editor\\\\Unity.exe\n" "${UNITY_VERSION}" >> "${GITHUB_OUTPUT}"
          fi
      - name: Run EditMode tests
        working-directory: Samples~
        env:
          UNITY_PATH: ${{ steps.get-unity-path.outputs.unity-path }}
        run: |
          "${UNITY_PATH}" \
            -silent-crashes \
            -batchmode \
            -projectPath . \
            -logFile - \
            -runTests \
            -testResults TestResults.xml
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: UnityTestResults
          path: ./Samples~/TestResults.xml

  publish-test-results:
    runs-on: ubuntu-latest
    needs: [test]
    timeout-minutes: 10
    permissions:
      contents: read
      actions: read
      checks: write
      pull-requests: write
    steps:
      - uses: actions/download-artifact@v5
        id: download
        with:
          name: UnityTestResults
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6
        if: success() || failure()
        with:
          files: |
            ${{ steps.download.outputs.download-path }}/TestResults.xml
